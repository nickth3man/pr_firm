name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Run unit tests
      run: pytest tests/unit --cov=utils --cov-report=term-missing --cov-report=xml:coverage-unit.xml

    - name: Run integration tests
      run: pytest tests/integration --cov=utils --cov-report=term-missing --cov-report=xml:coverage-integration.xml

    - name: Run end-to-end tests
      run: pytest tests/e2e --cov=utils --cov-report=term-missing --cov-report=xml:coverage-e2e.xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        files: coverage-unit.xml,coverage-integration.xml,coverage-e2e.xml
        flags: unittests,integration,endtoend

  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy

    - name: Run flake8
      run: flake8 .

    - name: Run black
      run: black --check .

    - name: Run isort
      run: isort --check-only .

    - name: Run mypy
      run: mypy .

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run bandit
      run: bandit -r .

    - name: Run safety
      run: safety check

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test, lint, security]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build

    - name: Build package
      run: python -m build

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: python-package
        path: dist/